generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  username      String?   @unique
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  createdAt     DateTime  @default(now())

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Post {
  id        String     @id @default(cuid())
  title     String
  slug      String     @unique
  content   String
  thumbnail String?
  desc      String?
  keywords  String?
  catslug   String
  category  Category?  @relation(fields: [catslug], references: [slug])
  excerpt   String?
  authorId  String     @map("author_id")
  author    User       @relation(fields: [authorId], references: [id])
  status    PostStatus @default(DRAFT)
  createdAt DateTime   @default(now())
}

model Category {
  id    String @id @default(cuid())
  title String @unique
  slug  String @unique
  posts Post[]
}

enum PostStatus {
  DRAFT
  PUBLISHED
  DELETED
  ARCHIVED
}

